name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  run-api-tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Java environment
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Navigate to the Testing directory and Start Backend Service
      - name: Start Backend Service
        run: |
          cd Testing
          nohup java -jar lib/demo-0.0.1-SNAPSHOT.jar &

      # Step 4: Wait for the backend service to start
      - name: Wait for Backend
        run: |
          cd Testing
          for i in {1..10}; do
            nc -zv localhost 7081 && echo "Backend is up!" && break
            echo "Waiting for backend..."
            sleep 5
          done

      # Step 5: Run Serenity BDD API Tests
      - name: Run Serenity API Tests
        run: |
          cd Testing
          mkdir -p target/site/serenity
          mvn clean verify -Dtest="ApiTestRunner" -Dserenity.outputDirectory=target/site/serenity

      # Step 6: Save Serenity BDD Results as Artifacts
      - name: Archive Serenity API Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: serenity-results-api
          path: Testing/target/site/serenity

  run-ui-tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Java environment
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Step 3: Install Chrome and WebDriver
      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version

      # Step 4: Run Serenity BDD UI Tests
      - name: Run Serenity UI Tests
        run: |
          cd Testing
          mkdir -p target/site/serenity
          mvn clean verify -Dtest="UITestRunner" -Dserenity.outputDirectory=target/site/serenity

      # Step 5: Save Serenity BDD Results as Artifacts
      - name: Archive Serenity UI Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: serenity-results-ui
          path: Testing/target/site/serenity
