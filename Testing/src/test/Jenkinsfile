pipeline {
    agent any

    tools {
        maven 'Maven 3.9.9'
        jdk 'JDK 21'
    }

    stages {
        stage('Get Code') {
            steps {
                cleanWs()
                git branch: 'main',
                    url: 'https://github.com/BookReg-TestAutomation/Group_40.git'
            }
        }

        stage('Run Tests') {
            parallel {
                stage('UI Tests') {
                    steps {
                        dir('Testing') {
                            script {
                                // Check for UI test resources
                                if (!fileExists('src/test/resources/features/ui/inventory.feature') ||
                                    !fileExists('src/test/resources/features/ui/login.feature')) {
                                    error 'UI feature files not found'
                                }
                                if (!fileExists('src/test/java/com/example/ui_testing/runners/UITestRunner.java')) {
                                    error 'UI Test Runner not found'
                                }
                            }
                            // Run UI tests using the test runner
                            bat '''
                                mvn clean test -Dtest=com.example.ui_testing.runners.UITestRunner
                            '''
                        }
                    }
                }

                stage('API Tests') {
                    steps {
                        dir('Testing') {
                            script {
                                if (!fileExists('src/test/resources/features/api')) {
                                    error 'API feature files not found'
                                }
                            }
                            // Run API tests
                            bat '''
                                mvn clean test -Dtest=**/steps/api/*Test
                            '''
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'All tests completed successfully!'
            junit '**/target/surefire-reports/*.xml'

            // Publish Serenity reports if they're generated
            publishHTML(target: [
                allowMissing: false,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'Testing/target/site/serenity',
                reportFiles: 'index.html',
                reportName: 'Serenity Test Report'
            ])
        }
        failure {
            echo 'Some tests failed - check the test results for details'
            junit '**/target/surefire-reports/*.xml'
        }
        always {
            archiveArtifacts artifacts: 'Testing/target/site/serenity/**/*', fingerprint: true
            cleanWs()
        }
    }
}